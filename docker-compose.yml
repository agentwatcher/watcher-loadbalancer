version: "3.8"

services:
  # Load Balancer
  load-balancer:
    build: .
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - LOG_LEVEL=info
      - API_TARGETS=http://api-1:5000,http://api-2:5000,http://api-3:5000
      - AUTH_TARGETS=http://auth-1:3001,http://auth-2:3001
      - ANALYTICS_TARGETS=http://analytics:5002
      - STORAGE_TARGETS=http://storage-1:5003,http://storage-2:5003
      - WEBSOCKET_TARGETS=ws://websocket:5004
      - API_ALGORITHM=round-robin
      - AUTH_ALGORITHM=round-robin
      - STORAGE_ALGORITHM=least-response-time
      - HEALTH_CHECK_INTERVAL=10000
      - HEALTH_CHECK_TIMEOUT=5000
      - RATE_LIMIT_WINDOW_MS=900000
      - RATE_LIMIT_MAX=100
    networks:
      - artistify-network
    depends_on:
      - api-1
      - api-2
      - api-3
      - auth-1
      - auth-2
      - analytics
      - storage-1
      - storage-2
      - websocket

  # API Service (3 instances)
  api-1:
    build: ../artistify-api-project
    environment:
      - NODE_ENV=production
      - PORT=5000
      - SERVICE_INSTANCE=1
    networks:
      - artistify-network

  api-2:
    build: ../artistify-api-project
    environment:
      - NODE_ENV=production
      - PORT=5000
      - SERVICE_INSTANCE=2
    networks:
      - artistify-network

  api-3:
    build: ../artistify-api-project
    environment:
      - NODE_ENV=production
      - PORT=5000
      - SERVICE_INSTANCE=3
    networks:
      - artistify-network

  # Auth Service (2 instances)
  auth-1:
    build: ../artistify-auth-service # Replace with actual path
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SERVICE_INSTANCE=1
    networks:
      - artistify-network

  auth-2:
    build: ../artistify-auth-service # Replace with actual path
    environment:
      - NODE_ENV=production
      - PORT=3001
      - SERVICE_INSTANCE=2
    networks:
      - artistify-network

  # Analytics Service
  analytics:
    build: ../artistify-analytics-service # Replace with actual path
    environment:
      - NODE_ENV=production
      - PORT=5002
    networks:
      - artistify-network

  # Storage Service (2 instances)
  storage-1:
    build: ../artistify-storage-service # Replace with actual path
    environment:
      - NODE_ENV=production
      - PORT=5003
      - SERVICE_INSTANCE=1
    networks:
      - artistify-network

  storage-2:
    build: ../artistify-storage-service # Replace with actual path
    environment:
      - NODE_ENV=production
      - PORT=5003
      - SERVICE_INSTANCE=2
    networks:
      - artistify-network

  # WebSocket Service
  websocket:
    build: ../artistify-websocket-service # Replace with actual path
    environment:
      - NODE_ENV=production
      - PORT=5004
    networks:
      - artistify-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - artistify-network
    depends_on:
      - load-balancer

  # Grafana for metrics visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - artistify-network
    depends_on:
      - prometheus

networks:
  artistify-network:
    driver: bridge

volumes:
  grafana-storage:
